slug,schemaHash,queriesCode,favicon,version,createdAt,tempFolder
zora,0ba564c8df1f0773eda0e86149dd3ee362a02dac3f2cf2175cacfd278aa6b73e,"import { createClient } from '@genql/zora'
const client = createClient()


// query variables
let networks
let sort
let where

client
  .query({
    aggregateAttributes: {
      __args: {
        networks: networks,
        sort: sort,
        where: where,
      },
      traitType: true,
      valueMetrics: {
        count: true,
        percent: true,
        value: true,
      },
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))



// query variables
let networks
let where
let networks1
let where1
let networks2
let where2

client
  .query({
    aggregateStat: {
      floorPrice: {
        __args: {
          networks: networks,
          where: where,
        },
      },
      nftCount: {
        __args: {
          networks: networks1,
          where: where1,
        },
      },
      ownerCount: {
        __args: {
          networks: networks2,
          where: where2,
        },
      },
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))

",https://zora.co/icon-ios.png,,2023-02-14T18:48:41.808Z,/var/folders/fc/x_42l3cj7wgdbf872w0ng30w0000gn/T/tmp-13633-q20izaGJdRAx
wapm-registry,4c9d2419ad9daf2d55895b7053f20cd2ad223665e8fa5fcffc2739b1519df383,"import { createClient } from '@genql/wapm-registry'
const client = createClient()


// query variables
let name = ''
let namespace = ''

client
  .query({
    getAnyDeployConfig: {
      __args: {
        name: name,
        namespace: namespace,
      },
      createdAt: true,
      id: true,
      name: true,
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))



// query variables
let name = ''
let namespace = ''

client
  .query({
    getAnyDeployConfigVersion: {
      __args: {
        name: name,
        namespace: namespace,
      },
      config: true,
      configWebc: true,
      createdAt: true,
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))

",https://wapm.io/favicon.png,,2023-02-14T18:48:41.815Z,/var/folders/fc/x_42l3cj7wgdbf872w0ng30w0000gn/T/tmp-13633-QVRWjqSBqqVv
thegraph,2d1cbaad0af30128c465d5f2c8734884a6fff598f7f603f0e68d1918506baad9,"import { createClient } from '@genql/thegraph'
const client = createClient()


// query variables
let subgraphId = ''

client
  .query({
    apiVersions: {
      __args: {
        subgraphId: subgraphId,
      },
      version: true,
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))



// query variables
let blockHash
let network = ''

client
  .query({
    blockData: {
      __args: {
        blockHash: blockHash,
        network: network,
      },
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))

",https://storage.googleapis.com/graph-web/favicon.png,,2023-02-14T18:48:41.816Z,/var/folders/fc/x_42l3cj7wgdbf872w0ng30w0000gn/T/tmp-13633-xcMF2sxRIE02
tezos-domains,92e6714ff12686eafa3c756f27bcb984e84732310c0b8d7ca49d09e8ed718bab,"import { createClient } from '@genql/tezos-domains'
const client = createClient()


// query variables
let atBlock
let domainName = ''
let startedAtLevel = 3

client
  .query({
    auction: {
      __args: {
        atBlock: atBlock,
        domainName: domainName,
        startedAtLevel: startedAtLevel,
      },
      bidAmountSum: true,
      bidCount: true,
      bids: {
        amount: true,
        bidder: true,
      },
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))



// query variables
let after = ''
let atBlock

client
  .query({
    auctions: {
      __args: {
        after: after,
        atBlock: atBlock,
      },
      edges: {
        cursor: true,
      },
      items: {
        bidAmountSum: true,
        bidCount: true,
      },
      pageInfo: {
        endCursor: true,
        hasNextPage: true,
        hasPreviousPage: true,
      },
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))

",https://tezos.domains/img/favicon.ico,,2023-02-14T18:48:41.817Z,/var/folders/fc/x_42l3cj7wgdbf872w0ng30w0000gn/T/tmp-13633-TcNwW5VcAY0O
sourcegraph,850c0e695a1ef4b3cc91d07f570eb82dd35c6ebee737723c6c2c98ed34c3bbb0,"import { createClient } from '@genql/sourcegraph'
const client = createClient()


client
  .query({ areExecutorsConfigured: true })
  .then((x) => console.log(JSON.stringify(x, null, 4)))



// query variables
let precise = false
let after = ''
let email = ''
let first = 3

client
  .query({
    authorizedUserRepositories: {
      __args: {
        after: after,
        email: email,
        first: first,
      },
      pageInfo: {
        endCursor: true,
        hasNextPage: true,
      },
      totalCount: {
        __args: {
          precise: precise,
        },
      },
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))

",,,2023-02-14T18:48:41.818Z,/var/folders/fc/x_42l3cj7wgdbf872w0ng30w0000gn/T/tmp-13633-xvAL91dqvOZe
pokeapi,d573870e7185ab99f1e952e796d71b2b415bd5262d6d898683e55a42b816e953,"import { createClient } from '@genql/pokeapi'
const client = createClient()


// query variables
let distinct_on
let limit = 3

client
  .query({
    pokemon_v2_ability: {
      __args: {
        distinct_on: distinct_on,
        limit: limit,
      },
      generation_id: true,
      id: true,
      is_main_series: true,
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))



// query variables
let columns
let distinct = false
let distinct_on
let limit = 3

client
  .query({
    pokemon_v2_ability_aggregate: {
      __args: {
        distinct_on: distinct_on,
        limit: limit,
      },
      aggregate: {
        count: {
          __args: {
            columns: columns,
            distinct: distinct,
          },
        },
      },
      nodes: {
        generation_id: true,
        id: true,
        is_main_series: true,
      },
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))

",https://pokeapi.co/pokeapi_192_square.png,,2023-02-14T18:48:41.818Z,/var/folders/fc/x_42l3cj7wgdbf872w0ng30w0000gn/T/tmp-13633-VaRcFvC6kmxz
opencollective,8f21582e9769cbc6d739c8c310e0f38285415e282ab2b53dfdc91e8bb812bf96,"import { createClient } from '@genql/opencollective'
const client = createClient()


// query variables
let channel
let format
let height = 3
let githubHandle = ''
let id = ''

client
  .query({
    account: {
      __args: {
        githubHandle: githubHandle,
        id: id,
      },
      activitySubscriptions: {
        __args: {
          channel: channel,
        },
        active: true,
        channel: true,
      },
      backgroundImageUrl: {
        __args: {
          format: format,
          height: height,
        },
      },
      categories: true,
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))



// query variables
let format
let height = 3
let country
let hasCustomContributionsEnabled = false
let limit = 3
let offset = 3
let tagSearchOperator

client
  .query({
    accounts: {
      __args: {
        country: country,
        hasCustomContributionsEnabled: hasCustomContributionsEnabled,
        limit: limit,
        offset: offset,
        tagSearchOperator: tagSearchOperator,
      },
      limit: true,
      nodes: {
        backgroundImageUrl: {
          __args: {
            format: format,
            height: height,
          },
        },
        categories: true,
      },
      offset: true,
    },
  })
  .then((x) => console.log(JSON.stringify(x, null, 4)))

",,,2023-02-14T18:48:41.819Z,/var/folders/fc/x_42l3cj7wgdbf872w0ng30w0000gn/T/tmp-13633-Cr6aUoRRdUIF