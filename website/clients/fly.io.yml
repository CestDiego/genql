favicon: https://fly.io/phx/ui/images/favicon/apple-touch-icon-3e4c9ce127b5cd6f5516638d4bbf1dd5.png?vsn=d
version: 0.9.0
content: |
  GraphQl for the fly.io cloud platform
website: https://fly.io
endpoint: https://api.fly.io/graphql
exampleCode: |+
  import { createClient } from '@genql/fly.io'
  const client = createClient()


  // query variables
  let id
  let name

  client
    .query({
      addOn: [
        {
          id: id,
          name: name,
        },
        {
          addOnPlan: {
            displayName: true,
            id: true,
            maxCommandsPerSec: true,
          },
          hostname: true,
          id: true,
        },
      ],
    })
    .then((x) => console.log(JSON.stringify(x, null, 4)))



  // query variables
  let after
  let before

  client
    .query({
      addOnPlans: [
        {
          after: after,
          before: before,
        },
        {
          edges: {
            cursor: true,
          },
          nodes: {
            displayName: true,
            id: true,
            maxCommandsPerSec: true,
          },
          pageInfo: {
            endCursor: true,
            hasNextPage: true,
            hasPreviousPage: true,
          },
        },
      ],
    })
    .then((x) => console.log(JSON.stringify(x, null, 4)))



  // query variables
  let name

  client
    .query({
      addOnProvider: [
        {
          name: name,
        },
        {
          excludedRegions: {
            code: true,
            gatewayAvailable: true,
            latitude: true,
          },
          id: true,
          name: true,
        },
      ],
    })
    .then((x) => console.log(JSON.stringify(x, null, 4)))



  // Mutations
  // query variables
  let id
  let showCompleted
  let appId
  let hostname

  client
    .mutation({
      addCertificate: [
        {
          appId: appId,
          hostname: hostname,
        },
        {
          app: {
            allocation: [
              {
                id: id,
              },
              {
                canary: true,
              },
            ],
            allocations: [
              {
                showCompleted: showCompleted,
              },
              {
                canary: true,
              },
            ],
            appUrl: true,
          },
          certificate: {
            certificateAuthority: true,
          },
          check: {
            aRecords: true,
            aaaaRecords: true,
            acmeDnsConfigured: true,
          },
        },
      ],
    })
    .then((x) => console.log(JSON.stringify(x, null, 4)))

